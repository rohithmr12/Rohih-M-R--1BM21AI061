#include <iostream>
#include <chrono>

class linear {
public:
    static int linearSearch(const int* arr, int size, int target) {
        for (int i = 0; i < size; i++) {
            if (arr[i] == target) {
                return i;
            }
        }
        return -1;
    }
};

int main() {
    int arr[] = { 2, 5, 7, 10, 14, 18, 22, 30 };
    int size = sizeof(arr) / sizeof(arr[0]);
    int target = 18;

    std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();
    int linearSearchIndex = linear::linearSearch(arr, size, target);
    std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();

    std::cout << "Linear Search: ";
    if (linearSearchIndex != -1) {
        std::cout << "Element found at index " << linearSearchIndex << std::endl;
    } else {
        std::cout << "Element not found." << std::endl;
    }

    std::chrono::duration<double, std::nano> duration = end - start;
    std::cout << "Time taken: " << duration.count() << " nanoseconds" << std::endl;

    return 0;
}



